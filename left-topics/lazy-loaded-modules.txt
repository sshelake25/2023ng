ng generate module admin --route admin --module app.module

// app-routing.module.ts

const routes: Routes = [
  {
    path: 'admin',
    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)
  },
  // ... other routes
];



// admin-routing.module.ts

import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { AdminComponent } from './admin.component';  // default component generated by CLI

const routes: Routes = [
  {
    path: '',
    component: AdminComponent,
    children: [
      // other admin routes can be defined here
    ]
  }
];

@NgModule({
  imports: [RouterModule.forChild(routes)],
  exports: [RouterModule]
})
export class AdminRoutingModule { }

//-------------------------

@NgModule({
  declarations: [AdminComponent],
  imports: [
    CommonModule,
    AdminRoutingModule
  ]
})
export class AdminModule { }

//-----------
<a routerLink="/admin">Admin</a>


 set up a lazy-loaded Admin module in your Angular application. This ensures that the module's code is not loaded initially, improving the app's initial load performance, and is instead loaded on-demand when the user navigates to the /admin route
